#%RAML 1.0
title: dtt-b2cw-mymsc-eapi

version: v1
baseUri: https://{env}{host}/dtt-b2cw-mymsc-eapi/{version}
description: Experience API for B2C My MSC Portal

baseUriParameters:
  env:
    enum: [dev.,test.]
    description: The target environment where the application is going to be deployed. PROD is not provided as an option since the APIs in production require no qualifier.
    required: false

documentation: 
  - !include CHANGELOG.raml

securitySchemes:
  jwtAuthentication: !include traits/securitySchemes/jwt-authentication.raml

protocols: [HTTPS]

uses:
  mscCommonLibrary: /exchange_modules/f15d9731-99ff-4b7f-8f63-a146cb0a68d2/msc-common-library/1.0.3/msc-common-library.raml
  errorLibrary: /exchange_modules/f15d9731-99ff-4b7f-8f63-a146cb0a68d2/msc-rest-error-library/1.3.0/msc-rest-error-library.raml
  dttCommonLibrary: exchange_modules/f15d9731-99ff-4b7f-8f63-a146cb0a68d2/dtt-common-library/1.10.0/dtt-common-library.raml
  securitySchemesLibrary: /exchange_modules/f15d9731-99ff-4b7f-8f63-a146cb0a68d2/msc-security-schemes-library/1.0.1/msc-security-schemes-library.raml
  prepaidBookingsAddItem: dataTypes/bookings/prepaidBookings/prepaid-bookings-library.raml
  prepaidBookingsRefundLibrary: dataTypes/bookings/prepaidBookings/refunds/refunds-library.raml


types:
  baseActivityDetails: dttCommonLibrary.baseActivityDetails
  partialSuccessResponse: errorLibrary.partialSuccess
  amount : dttCommonLibrary.amount
  negativeAmount : dttCommonLibrary.negativeAmount
  amountsWithDueDate : dttCommonLibrary.amountsWithDueDate
  email: dttCommonLibrary.email
  bookingNumber: dttCommonLibrary.bookingNumber
  telephoneNumber: dttCommonLibrary.telephoneNumber  
  datatransTransactionId: dttCommonLibrary.datatransTransactionId
  prepaidBookingsExcursionRequest: dttCommonLibrary.prepaidBookingsExcursionRequest
  prepaidBookingsOnboardServiceRequest: dttCommonLibrary.prepaidBookingsOnboardServiceRequest
  prepaidBookingsPriceDetails: dttCommonLibrary.prepaidBookingsPriceDetails
  prepaidBookingsPassengerDetails: dttCommonLibrary.prepaidBookingsPassengerDetails
  prepaidBookingsCabinDetails: dttCommonLibrary.prepaidBookingsCabinDetails
  prepaidBookingsAddItemExcursionRequest: prepaidBookingsAddItem.excursionRequest
  prepaidBookingsAddItemOnboardServiceRequest: prepaidBookingsAddItem.onboardServiceRequest
  goldenId: dttCommonLibrary.goldenId
  fullAddressDetails: dttCommonLibrary.fullAddressDetails
  partialSuccess: errorLibrary.partialSuccess
  passengerDetails: prepaidBookingsRefundLibrary.passengerDetails
  cabinDetails:  prepaidBookingsRefundLibrary.cabinDetails
  countryCode: !include dataTypes/primitives/country-code.raml

traits:
  agencyIdHeader: !include traits/agency-id-header.raml
  countryCodeHeader: !include traits/country-code-header.raml
  currencyHeader: !include traits/currency-header.raml
  languageCodeHeader: !include traits/language-code-header.raml
  localeHeader: !include traits/locale-header.raml
  conversationHeader: !include traits/conversation-header.raml
  traceparentHeader: !include traits/traceparent-header.raml
  ecidHeader: !include traits/ecid-header.raml

/cruises/{cruise-id}:
  /itinerary:
    is: [errorLibrary.baseErrorJsonResponses, languageCodeHeader, countryCodeHeader, localeHeader, conversationHeader, traceparentHeader]
    get:
      securedBy: [jwtAuthentication]
      description: Retrieve list of itinerary details for a particular cruise
      responses:
        200:
          body:
            application/json:
              type: !include dataTypes/cruises/itinerary/get-response.raml

  /excursions:
    is: [errorLibrary.baseErrorJsonResponses, languageCodeHeader, countryCodeHeader, currencyHeader, localeHeader, conversationHeader, traceparentHeader]
    get:
      securedBy: [jwtAuthentication]
      queryParameters:
        includeDepartureAndArrivalPorts:
          type: boolean
          description: Indicates whether to include departure and arrival ports in response
          required: false
          default: false
        bookingNumber:
          type: bookingNumber
          description: The booking number
          required: true
          example: "123456"
      description: Retrieve list of excursion details for a particular cruise
      responses:
        200:
          body:
            application/json:
              type: !include dataTypes/cruises/excursions/get-response.raml

    /{excursion-code}:
      is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, languageCodeHeader, currencyHeader, conversationHeader, traceparentHeader]
      get:
        securedBy: [jwtAuthentication]
        description: Search excursions based on excursion code
        queryParameters:
          bookingNumber:
            type: bookingNumber
            description: The booking number
            example: "58630003"
            required: true
          locationCode:
            type: string
            description: Location Code
            example: SB1
            required: true
          startDate:
            type: date-only
            description: Possible occurrence start date
            example: "2026-08-31"
            required: true
          endDate:
            type: date-only
            description: Possible occurrence end date
            example: "2026-08-31"
            required: true
          priceBasis:
            description: Price basis of the excursions. Indicates if it’s per person or per cabin.
            enum:
              - PER_PERSON
              - PER_CABIN
            required: true
            example: PER_PERSON
        responses:
          200:
            body:
              application/json:
                type: !include dataTypes/cruises/excursions/get-excursions-by-id-response.raml

  /onboard-services:
    is: [errorLibrary.baseErrorJsonResponses, conversationHeader, traceparentHeader]
    get:
      securedBy: [jwtAuthentication]
      headers:
        MSC-Country-Code:  
          description: 2 letter ISO 3166 Country code.
          pattern: '^[A-Z]{2}$'
          example: GB
          required: true
        MSC-Language-Code: 
          description: ISO 639-1 language code.
          pattern: '^[a-z]{3}$'
          example: eng
          required: true
        MSC-Locale: 
          description: Locale is a combination of ISO 639-1 language code and ISO 3166-1 country code. Filters the response to only include the provided locale.
          pattern: '^[a-z]{2}_[a-zA-Z]{2}$'
          example: en_GB
          required: true
        MSC-Currency-Code: 
          description: 3 letter ISO 3166 Country code.
          pattern: '^[A-Z]{3}$'
          example: GBR
          required: false
      queryParameters:
        bookingNumber:
          description: Booking number value
          type: bookingNumber
          example: "58630003"
          required: true
      responses:
        200:
          body:
            application/json: 
              type: !include dataTypes/cruises/onboardServices/get-response.raml

    /{obs-code}:
      is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, currencyHeader, agencyIdHeader, conversationHeader, traceparentHeader]
      get:
        securedBy: [jwtAuthentication]
        description: Retrieves list of onboard services
        headers:
          MSC-Language-Code: 
            description: ISO 639-1 language code.
            pattern: '^[a-z]{3}$'
            example: eng
            required: true
        queryParameters:
          bookingNumber:
            type: bookingNumber
            description: The booking number
            example: "58630003"
            required: true
          deliveryDate:
            type: date-only
            description: Date of service delivery
            example: "2026-08-31"
            required: true
          type:
            type: string
            description: Onboard service type
            example: SPA
            required: true
          priceBasis:
            description: Price basis of the Onboard service. Indicates if it’s per person or per cabin.
            enum:
              - PER_PERSON
              - PER_CABIN
            required: true
            example: PER_PERSON
        responses:
          200:
            body:
              application/json:
                type: !include dataTypes/cruises/onboardServices/get-onboard-services-by-id-response.raml
      /dining-rooms/{dining-room-code}/reservations:
        is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, conversationHeader, traceparentHeader]
        post:
          securedBy: [jwtAuthentication]
          description: Retrieves a list of reservations for a specific dining room.
          headers:
            MSC-Language-Code: 
              description: ISO 639-1 language code.
              pattern: '^[a-z]{3}$'
              example: eng
              required: true
          body:
            application/json: 
              type: !include /dataTypes/cruises/onboardServices/diningRooms/post-reservations-request.raml
          responses:
            200:
              body:
                application/json:
                  type: !include /dataTypes/cruises/onboardServices/diningRooms/post-reservations-response.raml


  /prepaid-bookings/prices:
    is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, currencyHeader, localeHeader, conversationHeader, traceparentHeader]
    post:
      securedBy: [jwtAuthentication]
      description: Creates a price to book a list of pre-paid items
      headers:
        MSC-Language-Code: 
          description: ISO 639-1 language code.
          pattern: '^[a-z]{3}$'
          example: eng
          required: true
      body:
        application/json: 
          type: !include dataTypes/cruises/prepaidBookingsPrices/request.raml
      responses:
        200:
          body:
            application/json: 
              type: !include dataTypes/cruises/prepaidBookingsPrices/response.raml

/bookings:
  is: [errorLibrary.baseErrorJsonResponses, conversationHeader, traceparentHeader]
  get:
    securedBy: [jwtAuthentication]
    description: Retrieves list of bookings based on email address provided
    queryParameters:
      email:
        type: dttCommonLibrary.email
        description: Customer's email address
        example: some.email@here.com
        required: true
    responses:
      200:
        body:
          application/json: 
            type: !include dataTypes/bookings/get-response.raml
  /{booking-number}:
    is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, conversationHeader, traceparentHeader]
    uriParameters:
      booking-number:
        description: Booking number
        type: bookingNumber
        required: true
        example: "55683958"
    get:
      securedBy: [jwtAuthentication]
      description: Retrieves booking information
      responses:
        200:
          body:
            application/json: 
              type: !include dataTypes/bookings/get-by-id-response.raml

    /payment-options:
      is: [errorLibrary.baseErrorJsonResponses, languageCodeHeader, countryCodeHeader, localeHeader, conversationHeader, traceparentHeader, currencyHeader]
      post:
        securedBy: [jwtAuthentication]
        description: Retrieve available payment options for a booking.
        body:
          application/json: 
            type: !include /dataTypes/bookings/post-payment-options.raml
        responses:
          200:
            body:
              application/json: 
                type: !include dataTypes/bookings/post-payment-options-response.raml
    /payments:
      is: [errorLibrary.baseErrorJsonResponses, languageCodeHeader, countryCodeHeader, conversationHeader, traceparentHeader, currencyHeader, ecidHeader]
      post:
        securedBy: [jwtAuthentication]
        description: Complete the payment of a Cruise booked   
        body:
          application/json: 
            type: !include /dataTypes/bookings/post-payments-request.raml
        responses:
          201:
            body:
              application/json: 
                type: !include dataTypes/bookings/post-payments-response.raml                
    /upgrades:
      is: [errorLibrary.baseErrorJsonResponses, languageCodeHeader, countryCodeHeader, conversationHeader, traceparentHeader]
      post:
        securedBy: [jwtAuthentication]
        description: Determine if a user is eligible for an upgrade.
        body:
          application/json: 
            type: !include dataTypes/bookings/post-upgrades-request.raml
        responses:
          200:
            body:
              application/json: 
                type: !include dataTypes/bookings/post-upgrades-response.raml    
    /cabins/{cabin-id}:
      is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, conversationHeader, traceparentHeader]
      uriParameters:
        cabin-id:
          description: Cabin id
          type: string
          required: true
          example: "238225746"
      /slots:
        get:
          securedBy: [jwtAuthentication]
          description: Retrieves slots details based on the booking number and cabin id.
          headers:
            MSC-Language-Code: 
              description: ISO 639-1 language code.
              pattern: '^[a-z]{3}$'
              example: eng
              required: true
          responses:
              200:
                body:
                  application/json: 
                    type: !include /dataTypes/bookings/get-cabin-slots-response.raml
      /checkIns:
        is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, conversationHeader, traceparentHeader]
        get:
          securedBy: [jwtAuthentication]
          description: Retrieve check-in information for all passengers in the cabin
          headers:
            MSC-Language-Code: 
              description: ISO 639-1 language code.
              pattern: '^[a-z]{3}$'
              example: eng
              required: true
          responses:
              200:
                body:
                  application/json: 
                    type: !include dataTypes/bookings/get-cabin-checkins-response.raml

    /prepaid-bookings:
      is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, currencyHeader, localeHeader, conversationHeader, traceparentHeader, ecidHeader]
      post:
        securedBy: [jwtAuthentication]
        description: Creates a booking for list of pre-paid items
        headers:
          MSC-Language-Code: 
            description: ISO 639-1 language code.
            pattern: '^[a-z]{3}$'
            example: eng
            required: true
        body:
          application/json: 
            type: !include dataTypes/bookings/prepaidBookings/request.raml
        responses:
          200:
            body:
              application/json: 
                type: !include dataTypes/bookings/prepaidBookings/response.raml

      /refunds:
        is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, conversationHeader, traceparentHeader, currencyHeader, ecidHeader]
        post:
          securedBy: [jwtAuthentication]
          description: Request a refund for prepaid items for users logged in via Full Login only
          headers:
            MSC-Language-Code: 
              description: ISO 639-1 language code.
              pattern: '^[a-z]{3}$'
              example: eng
              required: true
            MSC-Locale: 
              description: Locale is a combination of ISO 639-1 language code and ISO 3166-1 country code. Filters the response to only include the provided locale.
              pattern: '^[a-z]{2}_[A-Z]{2}$'
              example: en_GB
              required: true
          body:
            application/json:
              type: !include dataTypes/bookings/prepaidBookings/refunds/request.raml
          responses:
            200:
              body:
                application/json: !include dataTypes/bookings/prepaidBookings/refunds/response.raml

/login/token: 
  /exchange: 
    is: [errorLibrary.baseErrorJsonResponses, conversationHeader, traceparentHeader]
    post:
      securedBy: [jwtAuthentication]
      description: Provides a new Mule JWT token with the claims identifying the logged in user
      responses:
        200:
          body:
            application/json:
              type: !include dataTypes/loginTokenExchange/response.raml
  /upgrade:
    is: [errorLibrary.baseErrorJsonResponses, conversationHeader, traceparentHeader]
    post:
      securedBy: [jwtAuthentication]
      description: Confirms that the user has access to the selected booking and provides a new Mule JWT token with the booking number as an additional claim.
      headers:
        MSC-Country-Code:  
          description: 2 letter ISO 3166 Country code.
          pattern: '^[A-Z]{2}$'
          example: GB
          required: true
        MSC-Language-Code: 
          description: ISO 639-1 language code.
          pattern: '^[a-z]{3}$'
          example: eng
          required: false
      body:
        application/json: 
          type: !include dataTypes/loginTokenUpgrade/request.raml
      responses:
        200:
          body:
            application/json: 
              type: !include dataTypes/loginTokenUpgrade/response.raml

/lightlogin/token:
  is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, languageCodeHeader, conversationHeader, traceparentHeader]
  post:
    securedBy: [securitySchemesLibrary.xClientIdAuthentication]
    description: Allows customers to access bookings using MSC’s light mode login.
    body:
      application/json: 
        type: !include dataTypes/lightloginToken/request.raml
    responses:
      200:
        body:
          application/json:
            type: !include dataTypes/lightloginToken/response.raml

/users:
  post:
    is: [errorLibrary.baseErrorJsonResponses, conversationHeader, countryCodeHeader,  traceparentHeader, languageCodeHeader, ecidHeader]
    securedBy: [jwtAuthentication]
    description: Used to complete a user's web identity profile linking to a customer record
    body:
      application/json: 
        type: !include dataTypes/users/post-user-request.raml
    responses:
      200:
        body:
          application/json:
            type: !include dataTypes/users/post-user-response.raml
  /{email}:
    /bookings:
      is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, conversationHeader, traceparentHeader, languageCodeHeader]
      uriParameters:
        email:
          description: email
          type: email
          required: true
          example: "mscc1@yopmail.com"
      post:
        securedBy: [jwtAuthentication]
        description: Links a booking to a web account
        body:
          application/json: 
            type: !include dataTypes/users/bookings/post-link-booking-request.raml
        responses:
          204:

/customers/{golden-id}:
    uriParameters:
      golden-id:
        description: Customer's golden ID
        type: goldenId
        required: true
        example: "132597427"
    is: [errorLibrary.baseErrorJsonResponses, countryCodeHeader, conversationHeader, traceparentHeader, languageCodeHeader]
    get:
      securedBy: [jwtAuthentication]
      description: Get customer by Golden ID
      responses:
        200:
          body:
            application/json:
              type: !include dataTypes/customers/get-customer-data-response.raml

/ping:
  type:
    mscCommonLibrary.ping